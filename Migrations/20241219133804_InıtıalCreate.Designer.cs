// <auto-generated />
using System;
using MartinBlautweb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MartinBlautweb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241219133804_InıtıalCreate")]
    partial class InıtıalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalisanIslem", b =>
                {
                    b.Property<int>("CalisanID")
                        .HasColumnType("int");

                    b.Property<int>("IslemID")
                        .HasColumnType("int");

                    b.HasKey("CalisanID", "IslemID");

                    b.HasIndex("IslemID");

                    b.ToTable("CalisanIslem");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Calisan", b =>
                {
                    b.Property<int>("CalisanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanID"));

                    b.Property<string>("CalisanAd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan>("CalisanMesaiBaslangic")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("CalisanMesaiBitis")
                        .HasColumnType("time");

                    b.Property<string>("CalisanSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CalisanTelefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("SalonID")
                        .HasColumnType("int");

                    b.Property<int>("UzmanlikAlanID")
                        .HasColumnType("int");

                    b.HasKey("CalisanID");

                    b.HasIndex("SalonID");

                    b.HasIndex("UzmanlikAlanID");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Islem", b =>
                {
                    b.Property<int>("IslemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IslemAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SalonID")
                        .HasColumnType("int");

                    b.Property<int>("Sure")
                        .HasColumnType("int");

                    b.Property<double>("Ucret")
                        .HasColumnType("float");

                    b.HasKey("IslemID");

                    b.HasIndex("SalonID");

                    b.ToTable("Islemler");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("KullaniciAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KullaniciMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KullaniciSoyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kulllanicilar");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuID"));

                    b.Property<int?>("CalisanID")
                        .HasColumnType("int");

                    b.Property<int?>("IslemID")
                        .HasColumnType("int");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<bool>("OnayDurumu")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("RandevuSaati")
                        .HasColumnType("time");

                    b.Property<DateTime>("RandevuTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SalonID")
                        .HasColumnType("int");

                    b.HasKey("RandevuID");

                    b.HasIndex("CalisanID");

                    b.HasIndex("IslemID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("SalonID");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Salon", b =>
                {
                    b.Property<int>("SalonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalonID"));

                    b.Property<string>("SalonAciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("SalonAcilisSaati")
                        .HasColumnType("time");

                    b.Property<string>("SalonAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SalonAdres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<TimeSpan>("SalonKapanisSaati")
                        .HasColumnType("time");

                    b.Property<string>("SalonTelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalonID");

                    b.ToTable("Salonlar");

                    b.HasData(
                        new
                        {
                            SalonID = 1,
                            SalonAciklama = "En kaliteli hizmeti sunuyoruz!",
                            SalonAcilisSaati = new TimeSpan(0, 8, 0, 0, 0),
                            SalonAdi = "Martin Blaut",
                            SalonAdres = "İstanbul/Ataşehir",
                            SalonKapanisSaati = new TimeSpan(0, 21, 0, 0, 0),
                            SalonTelefon = "05452745680"
                        });
                });

            modelBuilder.Entity("CalisanIslem", b =>
                {
                    b.HasOne("MartinBlautweb.Models.Calisan", null)
                        .WithMany()
                        .HasForeignKey("CalisanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MartinBlautweb.Models.Islem", null)
                        .WithMany()
                        .HasForeignKey("IslemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MartinBlautweb.Models.Calisan", b =>
                {
                    b.HasOne("MartinBlautweb.Models.Salon", "Salon")
                        .WithMany("Calisanlar")
                        .HasForeignKey("SalonID");

                    b.HasOne("MartinBlautweb.Models.Islem", "UzmanlikAlan")
                        .WithMany()
                        .HasForeignKey("UzmanlikAlanID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("UzmanlikAlan");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Islem", b =>
                {
                    b.HasOne("MartinBlautweb.Models.Salon", "Salon")
                        .WithMany("Islemler")
                        .HasForeignKey("SalonID");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Randevu", b =>
                {
                    b.HasOne("MartinBlautweb.Models.Calisan", "Calisan")
                        .WithMany("Randevular")
                        .HasForeignKey("CalisanID");

                    b.HasOne("MartinBlautweb.Models.Islem", "Islem")
                        .WithMany("Randevular")
                        .HasForeignKey("IslemID");

                    b.HasOne("MartinBlautweb.Models.Kullanici", "Kullanici")
                        .WithMany("Randevular")
                        .HasForeignKey("KullaniciID");

                    b.HasOne("MartinBlautweb.Models.Salon", null)
                        .WithMany("Randevular")
                        .HasForeignKey("SalonID");

                    b.Navigation("Calisan");

                    b.Navigation("Islem");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Calisan", b =>
                {
                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Islem", b =>
                {
                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Kullanici", b =>
                {
                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("MartinBlautweb.Models.Salon", b =>
                {
                    b.Navigation("Calisanlar");

                    b.Navigation("Islemler");

                    b.Navigation("Randevular");
                });
#pragma warning restore 612, 618
        }
    }
}
